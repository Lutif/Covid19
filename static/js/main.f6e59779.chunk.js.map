{"version":3,"sources":["components/MapMain.js","api/getCountries.js","api/getGlobal.js","api/getCountry.js","components/WorldMeters.js","components/DawnUpdate.js","components/Dashboard.js","App.js","index.js"],"names":["MapMain","useState","show","setshow","handleClick","e","target","name","className","onClick","data","map","country","Map","center","zoom","zoomControl","TileLayer","attribution","url","ZoomControl","position","Circle","key","Lat","Long","color","radius","parseInt","Tooltip","getCountries","a","config","headers","axios","get","res","console","log","response","error","getGlobal","params","getCountry","WorldMeters","world","countries","setdata","useEffect","getCoutries","then","coutriesList","prevdata","global","getCoutry","class","cases","active","deaths","total","recovered","onChange","value","selected","day","DawnUpdate","width","Dashboard","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6e59779.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\nimport { Map, TileLayer, Circle, Tooltip, ZoomControl } from \"react-leaflet\";\r\nimport data from \"../data/out.json\";\r\n\r\nfunction MapMain() {\r\n  const [show, setshow] = useState(\"Confirmed\")\r\n\r\n  function handleClick(e){\r\n    setshow(e.target.name)\r\n    \r\n  }\r\n  return (\r\n    <div className=\"map-container\">\r\n      <div className=\"map-top\">\r\n        <div className=\"map-buttons\">\r\n          <button className={show==\"Confirmed\" ? \"active\":\"inactive\"} name=\"Confirmed\" onClick={handleClick}>Total Cases</button>\r\n          <button className={show==\"Deaths\" ? \"active\":\"inactive\"} name=\"Deaths\" onClick={handleClick}>Deaths</button>\r\n          <button className={show==\"Recovered\" ? \"active\":\"inactive\"} name=\"Recovered\" onClick={handleClick}>Recoverd</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"map-side\">\r\n        <h3>List of Countries / States</h3>\r\n        {data.map(country=>\r\n          <div className=\"country-card\">\r\n            <p className=\"card-title\">{country[\"Coutry,State\"]}</p>\r\n            <p className=\"card-heading\">Confirmed Cases</p>\r\n            <p className=\"card-numebers blue\">{country[\"Confirmed\"]}</p>\r\n            <p className=\"card-heading \">Deaths</p>\r\n            <p className=\"card-numbers red\">{country[\"Deaths\"]}</p>\r\n            <p className=\"card-heading\">Recoverd</p>\r\n            <p className=\"card-numbers green\">{country[\"Recovered\"]}</p>\r\n          </div>)}\r\n      </div>\r\n\r\n      <Map className=\"Map\" center={[24.8607, 67.0011]} zoom={4} zoomControl={false}>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <ZoomControl position=\"topright\" />\r\n        {data.map(country => ( \r\n          <Circle\r\n            key={country[\"Coutry,State\"]}\r\n            center={ [country.Lat, country.Long]}\r\n            color={country[show] > 1000 ? \"red\" : \"blue\"}\r\n            radius={country[show] && 10 * parseInt(country[show])}\r\n            attribution={\"color=red\"}\r\n          >\r\n            <Tooltip>\r\n              {country[\"Coutry,State\"] + \" \" + country[show]}\r\n            </Tooltip>\r\n          </Circle>\r\n        ))}\r\n      </Map>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapMain;\r\n","import axios from \"axios\";\r\n const getCountries=async ()=>{\r\n    const config ={\r\n        headers:\r\n            {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"nmAIBhYOyBmshoAY95WZ8rDvQTXqp16pG0hjsnxl1IAUvKKTjt\"\r\n            }\r\n        }\r\n    try {\r\n        const res = await axios.get(\"https://covid-193.p.rapidapi.com/countries\",config)\r\n        console.log(res.data.response)\r\n        return res.data.response\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport default getCountries","import axios from \"axios\";\r\n\r\nexport default async function getGlobal(){\r\n    const config ={\r\n        headers:\r\n            {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"nmAIBhYOyBmshoAY95WZ8rDvQTXqp16pG0hjsnxl1IAUvKKTjt\"\r\n            },\r\n            params:{ \"country\": \"All\" }\r\n        }\r\n    try {\r\n        const res = await axios.get(\"https://covid-193.p.rapidapi.com/statistics\",config)\r\n        console.log(res.data.response)\r\n        return res.data.response\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\n","import axios from \"axios\";\r\n\r\nconst getCountry= async (country)=>{\r\n    const config ={\r\n        headers:\r\n            {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"nmAIBhYOyBmshoAY95WZ8rDvQTXqp16pG0hjsnxl1IAUvKKTjt\"\r\n            },\r\n            params:{ \"country\": country }\r\n        }\r\n    try {\r\n        const res = await axios.get(\"https://covid-193.p.rapidapi.com/statistics\",config)\r\n        console.log(res.data.response)\r\n        return res.data.response\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport default getCountry","import React,{useState, useEffect} from \"react\";\r\nimport getCoutries from \"../api/getCountries\"\r\nimport getGlobal from \"../api/getGlobal\"\r\nimport getCoutry from \"../api/getCountry\"\r\n\r\n\r\n\r\nfunction WorldMeters() {\r\n\r\n  const [data, setdata] = useState({country:{},world:{},countries:[]})\r\n\r\n  useEffect(()=>{\r\n  getCoutries().then(coutriesList =>{setdata(prevdata=> ({...prevdata,countries:coutriesList}))});\r\n  getGlobal().then(global=>setdata(prevdata=> ({...prevdata, world:global })))\r\n  getCoutry(\"Pakistan\").then(country=>setdata(prevdata=> ({...prevdata, country })))\r\n},[getCoutries,getGlobal])\r\nconst updateCountry=e =>{\r\n\r\n  getCoutry(e.target.value).then(country=>setdata(prevdata=> ({...prevdata, country })))\r\n}\r\n\r\nreturn (\r\n<div class=\"world-meter\">\r\n           <h1 class=\"main-heading\">Corona Update Center</h1>\r\n           <div class=\"stat\">\r\n             <div class=\"stat-group\"> \r\n               <h2>Global </h2>\r\n               <h3>Coronavirus Cases</h3>\r\n               <h2 class=\"blue\">{data.world[0] && data.world[0].cases.active}</h2>\r\n               <h3>Deaths</h3>\r\n               <h2 class=\"red\">{data.world[0] && data.world[0 ].deaths.total}</h2>\r\n               <h3>Recoverd</h3>\r\n               <h2 class=\"green\">{data.world[0] && data.world[0].cases.recovered}</h2>\r\n             </div>\r\n             <div class=\"stat-group\">\r\n              <p>Select country</p>\r\n               <select className=\"country\" onChange={updateCountry}>\r\n               {data.countries && data.countries.map (\r\n                country=> country==\"Pakistan\"? <option value={country} selected> {country} </option>:\r\n                <option value={country}> {country} </option>\r\n                )}\r\n                </select>\r\n                <h3>Coronavirus Cases</h3>\r\n               <h2 class=\"blue\">{data.country[0] && data.country[0].cases.active}</h2>\r\n               <h3>Deaths</h3>\r\n               <h2 class=\"red\">{data.country[0] && data.country[0 ].deaths.total}</h2>\r\n               <h3>Recoverd</h3>\r\n               <h2 class=\"green\">{data.country[0] && data.country[0].cases.recovered}</h2>\r\n               <small>Updated on {data.country[0] &&data.country[0].day}</small>\r\n            </div>\r\n            </div>\r\n           <div className=\"province\"> Provincial data for Pakistan will be added soon!</div>\r\n            {/* <Link to ='/map'>\r\n            <button>Map</button>\r\n            </Link> */}\r\n         </div>  );\r\n}\r\n\r\nexport default WorldMeters;\r\n","import React from \"react\";\r\nimport Iframe from \"react-iframe\";\r\nfunction DawnUpdate() {\r\n  return (\r\n    <div >\r\n      <Iframe\r\n      className=\"dawn-blog\"\r\n        url=\"https://www.dawn.com/live-blog/\"\r\n        width=\" 500px\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DawnUpdate;\r\n","import React from 'react'\r\nimport WorldMeters from './WorldMeters'\r\nimport DawnUpdate from './DawnUpdate'\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <DawnUpdate/>\r\n            <WorldMeters/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from \"react\";\nimport \"./App.css\";\nimport MainMap from \"./components/MapMain\";\nimport Dashboard from \"./components/Dashboard\";\nfunction App() {\n  return (\n    <div>\n      <Dashboard/>\n      <MainMap/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}